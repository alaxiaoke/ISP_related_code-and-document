"#define clamp(x, a, b) (min(max((x), (a)), (b)))\n"
"\n"
"__kernel void filter_(__global uchar const* src, __global uchar* dst, int rows, int cols)\n"
"{\n"
"	int h = get_global_id(0);\n"
"	int w = get_global_id(1);\n"
"	if (h < rows && w < cols)\n"
"	{\n"
"		int index = h * cols + w;\n"
"		int cur = src[index], sum = 0;\n"
"		for (int dh = -3; dh <= 3; dh++)\n"
"		{\n"
"			__global uchar const* line = src + clamp(h + dh, 0, rows - 1) * cols;\n"
"			for (int dw = -3; dw <= 3; dw++)\n"
"			{\n"
"				if (dh != 0 || dw != 0)\n"
"				{\n"
"					short dif = line[clamp(w + dw, 0, cols - 1)] - cur;\n"
"					short abs_dif = abs(dif);\n"
"					short res = clamp((short)(16 - (abs_dif >> 1)), (short)0, abs_dif);\n"
"					res = dif > 0 ? res : -res;\n"
"					sum += res;\n"
"				} \n"
"			}\n"
"		}\n"
"		dst[index] = clamp(cur + sum / 48, 0, 255);\n"
"	}\n"
"}\n"
"\n"
"__kernel void filter_n(__global uchar const* src, __global uchar* dst, int rows, int cols)\n"
"{\n"
"	int h = get_global_id(0);\n"
"	if (h < rows)\n"
"	{\n"
"		for (int w = 0; w < cols; w++)\n"
"		{\n"
"			int index = h * cols + w;\n"
"			int cur = src[index], sum = 0;\n"
"			for (int dh = -3; dh <= 3; dh++)\n"
"			{\n"
"				__global uchar const* line = src + clamp(h + dh, 0, rows - 1) * cols;\n"
"				for (int dw = -3; dw <= 3; dw++)\n"
"				{\n"
"					if (dh != 0 || dw != 0)\n"
"					{\n"
"						short dif = line[clamp(w + dw, 0, cols - 1)] - cur;\n"
"						short abs_dif = abs(dif);\n"
"						short res = clamp((short)(16 - (abs_dif >> 1)), (short)0, abs_dif);\n"
"						res = dif > 0 ? res : -res;\n"
"						sum += res;\n"
"					} \n"
"				}\n"
"			}\n"
"			dst[index] = clamp(cur + sum / 48, 0, 255);\n"
"		}\n"
"	}\n"
"}\n"
"\n"
"__kernel void filter(__global uchar const* src, __global uchar* dst, int rows, int cols)\n"
"{\n"
"	int h = get_global_id(0);\n"
"	if (h < rows)\n"
"	{\n"
"		for (int w = 0; w < cols; w++)\n"
"		{\n"
"			int index = h * cols + w;\n"
"			int cur = src[index], sum = 0;\n"
"			for (int dh = -0; dh <= 0; dh++)\n"
"			{\n"
"				__global uchar const* line = src + clamp(h + dh, 0, rows - 1) * cols;\n"
"				for (int dw = -0; dw <= 0; dw++)\n"
"				{\n"
"					if (dh != 0 || dw != 0)\n"
"					{\n"
"						short dif = line[clamp(w + dw, 0, cols - 1)] - cur;\n"
"						short abs_dif = abs(dif);\n"
"						short res = clamp((short)(16 - (abs_dif >> 1)), (short)0, abs_dif);\n"
"						res = dif > 0 ? res : -res;\n"
"						sum += res;\n"
"					} \n"
"				}\n"
"			}\n"
"			dst[index] = clamp(cur + sum / 48, 0, 255);\n"
"		}\n"
"	}\n"
"}\n"
