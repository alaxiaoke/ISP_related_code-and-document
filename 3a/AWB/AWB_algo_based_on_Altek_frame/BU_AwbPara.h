/****************************************************************************
*                                                                           *
*       This software and proprietary is confidential and may be used       *
*        only as expressly authorized by a licensing agreement from         *
*                                                                           *
*                            Altek Semiconductor                            *
*                                                                           *
*                   (C) COPYRIGHT 2023 ALTEK SEMICONDUCTOR                  *
*                            ALL RIGHTS RESERVED                            *
*                                                                           *
*                 The entire notice above must be reproduced                *
*                  on all copies and should not be removed.                 *
*                                                                           *
*****************************************************************************/


#ifndef BU_AWBPARA
#define BU_AWBPARA

#ifdef SENSOR_471
//==================================================================================================
/* ++++++++ AWB_ALGORITHM_PARAM ++++++++ */

/* init_para */

#define AWB_STATS_RG_SAT                          (5)         //rg saturation lower limit
#define AWB_STATS_BG_SAT                          (5)         //bg saturation lower limit

#define AWB_RGAIN_ADJ (1.0)
#define AWB_BGAIN_ADJ (1.0)

#define TUNING_FILE_PARA_PARA0 \
{\
	AWB_STATS_WIDTH,\
	AWB_STATS_HEIGHT,\
}

/* ++++++++ TUNING_FILE_LIGHT_SOURCE_PARAM ++++++++ */
/*scale 100: maxGreyCountIdx range(), maxGreyCount/grey_count ratio, rg adj, bg adj*/
#define AWB_TUNING_FILE_GAIN_ADJUST_NUM   (1)
#define AWB_TUNING_FILE_GAIN_ADJUST \
{\
	{0, 300, 80, 100, 100}, \
}

#define AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0               (7)

//471数据
#define AWB_TUNING_FILE_LIGHTSOURCE_ARRAY_PARA0 \
{\
    /* r/g*100 , b/g*100, ct, range*100  H U30  tl84  D50 D65 D75 */\
	{ 100, 25,  2300, -14,11}, \
	{ 75,  32, 3000, -16,14}, \
	{ 57,  41, 4000, -3,5}, \
	{ 49,  38, 3800, -3,6}, \
	{ 52,  50, 5000, 0,7}, \
	{ 44,  58, 6500, 0,0}, \
	{ 42,  64, 7500, 2,-2}, \
}



//JD1数据
//#define AWB_TUNING_FILE_LIGHTSOURCE_ARRAY_PARA0 \
//{\
//    /* r/g*100 , b/g*100, ct, range*100  H U30  tl84 cwf D50 D65 D75 */\
//	{ 91, 43, 2600, 9}, \
//	{ 98,  43, 3000, 13}, \
//	{ 76,  52, 3800, 12}, \
//	{ 68,  50, 3900, 22},\
//	{ 55,  65, 5000, 14}, \
//	{ 50,  74, 6500, 10}, \
//	{ 46,  80, 7500, 12}, \
//}

/* ++++++++ TUNING_FILE_WEIGHT_LS_PARAM ++++++++ */
// define light source weight settings
#define AWB_LS_WEIGHTING_TABLE_BV_NUM_PARA0        (5)
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA0 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA1 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA2 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA3 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA4 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}

#define TUNING_FILE_LS_WEIGHTING_PARA00000 \
{\
    (-3000),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA0,\
}
#define TUNING_FILE_LS_WEIGHTING_PARA02000 \
{\
    (0),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA1,\
}
#define TUNING_FILE_LS_WEIGHTING_PARA04000 \
{\
    (2000),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA2,\
}

#define TUNING_FILE_LS_WEIGHTING_PARA06000 \
{\
    (4000),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA3,\
}
#define TUNING_FILE_LS_WEIGHTING_PARA08000 \
{\
    (6000),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA4,\
}

#define TUNING_FILE_LS_WEIGHTING_PARA0 \
{\
    TUNING_FILE_LS_WEIGHTING_PARA00000,\
    TUNING_FILE_LS_WEIGHTING_PARA02000,\
    TUNING_FILE_LS_WEIGHTING_PARA04000,\
    TUNING_FILE_LS_WEIGHTING_PARA06000,\
    TUNING_FILE_LS_WEIGHTING_PARA08000,\
}

/* ++++++++ TUNING_FILE_SHIFT_PARAM ++++++++ */
// define light source shift settings
#define AWB_LS_SHIFT_TABLE_BV_NUM_PARA0        (5)

#define AWB_LS_SHIFT_TABLE_BV_PARA0 \
{-3000, 0, 2000, 4000, 6000} 

#define AWB_LS_SHIFT_TABLE_CT_NUM_PARA0        (13)

//rg等级 bg等级
#define AWB_LS_SHIFT_TABLE_CT_PARA0 \
{200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800} 

//#define AWB_LS_SHIFT_TABLE_CT_PARA0 \
//{2400, 3000, 4100, 4150, 5000, 6500} 

#define AWB_LS_SHIFT_RG_TABLE_NUM_PARA0        (AWB_LS_SHIFT_TABLE_CT_NUM_PARA0*AWB_LS_SHIFT_TABLE_BV_NUM_PARA0)

//LV-RG同一维度,BG一个维度
#define AWB_LS_SHIFT_RG_TABLE_PARA0 \
{ \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
}

#define AWB_LS_SHIFT_BG_TABLE_NUM_PARA0        (AWB_LS_SHIFT_TABLE_CT_NUM_PARA0*AWB_LS_SHIFT_TABLE_BV_NUM_PARA0)
#define AWB_LS_SHIFT_BG_TABLE_PARA0 \
{ \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
}



 //471模组数据 顺序：H A tl84 cwf 50 65 75
#define AWB_GLOBAL_REGION \
{10, 130, 10, 110}
#define AWB_GREY_REGION \
{90, 20, 110, 20, 110, 35, 90, 35}
 #define AWB_GREY_REGION2 \
{65, 22, 90, 22, 90, 42, 70, 53}
 #define AWB_GREY_REGION3 \
{45, 40, 70, 22, 70, 53, 45, 53}
 #define AWB_GREY_REGION4 \
{39, 28, 59, 28, 59, 48, 39, 48}
 #define AWB_GREY_REGION5 \
{42, 42, 70, 50, 62, 62, 32, 56}
 #define AWB_GREY_REGION6 \
{34, 53, 62, 62, 54, 73, 34, 73}
 #define AWB_GREY_REGION7 \
{32, 56, 52, 56, 52, 76, 32, 76}

 #define AWB_GREY_REGION_SUB_NUM (3)
 #define AWB_GREY_REGION_SUB \
{\
	{90, 20, 103, 20, 103, 28, 90, 28}, \
	{103, 20, 110, 20, 110, 35, 103, 35}, \
	{90, 28, 103, 28, 103, 35, 90, 35}, \
}


////顺序为 rg最小与最大 bg最小与最大 相当于四个值限制出来一个长方形区域   都乘了100
// greyregion是四边形的四个顶点，从左下角开始逆时针顺序，先rg再bg
#define AWB_PURPLE_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_RED_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_BLUE_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_YELLOW_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_GREEN_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_COLOR_REGION_NUM        (5)
//顺序为 rg_offset、bg_offset、weight_offset
#define AWB_GREY_OFFSET \
{-0.0, +0.0, 0.0}
#define AWB_RED_OFFSET \
{-0.0, +0.0, 0.0}
#define AWB_BLUE_OFFSET \
{-0.0, +0.0, 0.0}
#define AWB_YELLOW_OFFSET \
{-0.0, +0.0, 0.0}
#define AWB_GREEN_OFFSET \
{-0.0, +0.0, 0.0}

#define MISGUIDE_COLOR_REGION_NUM        (5)
//顺序为 四边形的四个顶点，从左下角开始逆时针顺序，先rg再bg   都乘了100  最后一位是落入该区域的统计点数量
#define MISGUIDE_REGION_1 \
{30, 40, 31, 40, 31, 41, 30, 41}
#define MISGUIDE_REGION_2 \
{20, 20, 21, 20, 21, 21, 20, 21}
#define MISGUIDE_REGION_3 \
{45, 50, 46, 50, 46, 51, 45, 51}
#define MISGUIDE_REGION_4 \
{35, 70, 36, 70, 36, 71, 35, 71}
#define MISGUIDE_REGION_5 \
{30, 45, 31, 45, 31, 46, 30, 46}

#define COLOR_REGION_OFFSET \
{\
    AWB_GREY_OFFSET,\
    AWB_RED_OFFSET,\
    AWB_BLUE_OFFSET,\
	AWB_YELLOW_OFFSET,\
	AWB_GREEN_OFFSET,\
}

#endif


#ifdef SENSOR_ov64b
//==================================================================================================
/* ++++++++ AWB_ALGORITHM_PARAM ++++++++ */


#define AWB_STATS_RG_SAT                          (5)         //rg saturation lower limit
#define AWB_STATS_BG_SAT                          (5)         //bg saturation lower limit

#define AWB_RGAIN_ADJ (1.0)
#define AWB_BGAIN_ADJ (1.0)

//#define TUNING_FILE_PARA_PARA0 \
//{\
//	AWB_STATS_WIDTH,\
//	AWB_STATS_HEIGHT,\
//}

/* ++++++++ TUNING_FILE_LIGHT_SOURCE_PARAM ++++++++ */
/*scale 100: maxGreyCountIdx range(), maxGreyCount/grey_count ratio, rg adj, bg adj*/
#define AWB_TUNING_FILE_GAIN_ADJUST_NUM   (1)
#define AWB_TUNING_FILE_GAIN_ADJUST \
{\
	{0, 300, 80, 100, 100}, \
}

#define AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0               (7)


#define AWB_TUNING_FILE_LIGHTSOURCE_ARRAY_PARA0 \
{\
    /* r/g*100 , b/g*100, ct, range*100  H A cwf  tl84 D50 D65 D75 */\
	{ 123, 32,  2300, -25,12}, \
	{ 99,  37, 3000, -16,14}, \
	{ 68,  45, 4000, -4,6}, \
	{ 72,  46, 3800, -4,6}, \
	{ 63,  57, 5000, -6,7}, \
	{ 57,  66, 6500, 0, 0}, \
	{ 53,  71, 7500, 2,-2}, \
}


/* ++++++++ TUNING_FILE_WEIGHT_LS_PARAM ++++++++ */
// define light source weight settings
#define AWB_LS_WEIGHTING_TABLE_BV_NUM_PARA0        (5)
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA0 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA1 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA2 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA3 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}
#define AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA4 \
{1000, 1000,  1000,  1000,  1000, 1000, 1000}

#define TUNING_FILE_LS_WEIGHTING_PARA00000 \
{\
    (-3000),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA0,\
}
#define TUNING_FILE_LS_WEIGHTING_PARA02000 \
{\
    (0),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA1,\
}
#define TUNING_FILE_LS_WEIGHTING_PARA04000 \
{\
    (2000),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA2,\
}

#define TUNING_FILE_LS_WEIGHTING_PARA06000 \
{\
    (4000),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA3,\
}
#define TUNING_FILE_LS_WEIGHTING_PARA08000 \
{\
    (6000),\
    AWB_TUNING_FILE_LIGHTSOURCE_NUM_PARA0,\
    AWB_GRAY_LIGHTSOURCE_WEIGHTING_TABLE_PARA4,\
}

#define TUNING_FILE_LS_WEIGHTING_PARA0 \
{\
    TUNING_FILE_LS_WEIGHTING_PARA00000,\
    TUNING_FILE_LS_WEIGHTING_PARA02000,\
    TUNING_FILE_LS_WEIGHTING_PARA04000,\
    TUNING_FILE_LS_WEIGHTING_PARA06000,\
    TUNING_FILE_LS_WEIGHTING_PARA08000,\
}

/* ++++++++ TUNING_FILE_SHIFT_PARAM ++++++++ */
// define light source shift settings
#define AWB_LS_SHIFT_TABLE_BV_NUM_PARA0        (5)

#define AWB_LS_SHIFT_TABLE_BV_PARA0 \
{-3000, 0, 2000, 4000, 6000} 

#define AWB_LS_SHIFT_TABLE_CT_NUM_PARA0        (13)

//rg等级 bg等级
#define AWB_LS_SHIFT_TABLE_CT_PARA0 \
{200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800} 

//#define AWB_LS_SHIFT_TABLE_CT_PARA0 \
//{2400, 3000, 4100, 4150, 5000, 6500} 

#define AWB_LS_SHIFT_RG_TABLE_NUM_PARA0        (AWB_LS_SHIFT_TABLE_CT_NUM_PARA0*AWB_LS_SHIFT_TABLE_BV_NUM_PARA0)

//LV-RG同一维度,BG一个维度
#define AWB_LS_SHIFT_RG_TABLE_PARA0 \
{ \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
}

#define AWB_LS_SHIFT_BG_TABLE_NUM_PARA0        (AWB_LS_SHIFT_TABLE_CT_NUM_PARA0*AWB_LS_SHIFT_TABLE_BV_NUM_PARA0)
#define AWB_LS_SHIFT_BG_TABLE_PARA0 \
{ \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
\
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -3, -3,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
	{-2, -2, -1, -1, -5, -5,-2, -2, -1, -1, -3, -3, -3}, \
}

	//{ 123, 32, 2300, 9}, \
	//{ 99, 37, 3000, 13}, \
	//{ 68, 45, 4000, 12}, \
	//{ 72, 46, 3800, 22}, \
	//{ 63, 57, 5000, 14}, \
	//{ 57, 66, 6500, 10}, \
	//{ 53, 71, 7500, 12}, \

 //471模组数据 顺序：H A tl84 cwf 50 65 75
//从左下角开始逆时针顺序，先rg再bg

#define AWB_GLOBAL_REGION \
{30, 150, 20, 100}
#define AWB_GREY_REGION \
{110, 27, 132, 27, 132, 35, 107, 38}
#define AWB_GREY_REGION2 \
{85, 33, 107, 26, 110, 40, 90, 42}
#define AWB_GREY_REGION3 \
{60, 51, 80, 37, 88, 46, 70, 53}
#define AWB_GREY_REGION4 \
{60, 51, 80, 37, 88, 46, 70, 53}
#define AWB_GREY_REGION5 \
{55, 61, 60, 53, 71, 55, 67, 63}
#define AWB_GREY_REGION6 \
{53, 60, 67, 62, 64, 68, 53, 67}
#define AWB_GREY_REGION7 \
{48, 65, 64, 68, 58, 76, 48, 76}

#define AWB_GREY_REGION_SUB_NUM (3)
#define AWB_GREY_REGION_SUB \
{\
	{110, 27, 132, 27, 132, 35, 107, 38}, \
	{103, 20, 110, 20, 110, 35, 103, 35}, \
	{90, 28, 103, 28, 103, 35, 90, 35}, \
}


////顺序为 rg最小与最大 bg最小与最大 相当于四个值限制出来一个长方形区域   都乘了100
// greyregion是四边形的四个顶点，从左下角开始逆时针顺序，先rg再bg
#define AWB_PURPLE_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_RED_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_BLUE_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_YELLOW_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_GREEN_REGION1 \
{32, 32, 32, 32, 32,32, 32, 32}

#define AWB_COLOR_REGION_NUM        (5)
//顺序为 rg_offset、bg_offset、weight_offset
#define AWB_GREY_OFFSET \
{-0.0, +0.0, 0.0}
#define AWB_RED_OFFSET \
{-0.0, +0.0, 0.0}
#define AWB_BLUE_OFFSET \
{-0.0, +0.0, 0.0}
#define AWB_YELLOW_OFFSET \
{-0.0, +0.0, 0.0}
#define AWB_GREEN_OFFSET \
{-0.0, +0.0, 0.0}

#define MISGUIDE_COLOR_REGION_NUM        (5)
//顺序为 四边形的四个顶点，从左下角开始逆时针顺序，先rg再bg   都乘了100  最后一位是落入该区域的统计点数量
#define MISGUIDE_REGION_1 \
{30, 40, 31, 40, 31, 41, 30, 41}
#define MISGUIDE_REGION_2 \
{20, 20, 21, 20, 21, 21, 20, 21}
#define MISGUIDE_REGION_3 \
{45, 50, 46, 50, 46, 51, 45, 51}
#define MISGUIDE_REGION_4 \
{35, 70, 36, 70, 36, 71, 35, 71}
#define MISGUIDE_REGION_5 \
{30, 45, 31, 45, 31, 46, 30, 46}

#define COLOR_REGION_OFFSET \
{\
    AWB_GREY_OFFSET,\
    AWB_RED_OFFSET,\
    AWB_BLUE_OFFSET,\
	AWB_YELLOW_OFFSET,\
	AWB_GREEN_OFFSET,\
}

#endif

#endif